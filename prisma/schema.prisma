generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                        Int       @id @default(autoincrement())
  user_id                   String    @unique
  email                     String    @unique
  name                      String?
  first_name                String?
  last_name                 String?
  gender                    String?
  profile_image_url         String?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime? @updatedAt
  remaining_lead_finds      Int       @default(0)
  remaining_reply_generations Int     @default(0)
  subscription              String?
  products                  Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  keywords    String
  url         String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  leads       Lead[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Lead {
  id               String   @id @default(cuid())
  content          String
  url              String
  authorName       String?
  authorId         String?
  authorUrl        String?
  creationDate     DateTime @default(now())
  subredditName    String?
  subredditUrl     String?
  subredditTitle   String?
  score            Int?
  nsfw             Boolean  @default(false)
  contentLanguage  String?
  upvoteRatio      Float?
  numComments      Int?
  contentType      String?
  postTitle        String?
  postUrl          String?
  product          Product  @relation(fields: [productId], references: [id])
  productId        Int      // Change this line from String to Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  reply            String?
}

model payments {
  id               Int      @id @default(autoincrement())
  created_time     DateTime @default(now())
  stripe_id        String
  email            String
  amount           String
  payment_time     String
  payment_date     String
  currency         String
  user_id          String
  customer_details String
  payment_intent   String
}

model subscriptions {
  id                        Int      @id @default(autoincrement())
  created_time              DateTime @default(now())
  subscription_id           String
  stripe_user_id            String
  status                    String
  start_date                DateTime
  end_date                  DateTime?
  plan_id                   String
  plan_name                 String
  plan_interval             String
  default_payment_method_id String?
  email                     String
  user_id                   String
}

model subscriptions_plans {
  id           Int      @id @default(autoincrement())
  created_time DateTime @default(now())
  plan_id      String
  name         String
  description  String
  amount       String
  currency     String
  interval     String
}

model invoices {
  id              Int      @id @default(autoincrement())
  created_time    DateTime @default(now())
  invoice_id      String
  subscription_id String
  amount_paid     String
  amount_due      String?
  currency        String
  status          String
  email           String
  user_id         String?
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String   @db.Text
  excerpt   String
  image     String?
  author    String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}
